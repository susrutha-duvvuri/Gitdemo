api application(main method)
package com.example.api.model;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.ComponentScan;

@SpringBootApplication
@ComponentScan(basePackages={"com"})
public class ApiApplication {

	public static void main(String[] args) {
		SpringApplication.run(ApiApplication.class, args);
	}
	

}


product.java


package com.example.product;

public class Product {
	private long id;
	private String name;
	private String description;
	private double price;
	public long getId() {
		return id;
	}
	public void setId(long id) {
		this.id = id;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public String getDescription() {
		return description;
	}
	public void setDescription(String description) {
		this.description = description;
	}
	public double getPrice() {
		return price;
	}
	public void setPrice(double price) {
		this.price = price;
	}
	public Product(long id, String name, String description, double price) {
		super();
		this.id = id;
		this.name = name;
		this.description = description;
		this.price = price;
	}
	
}


product controller



package com.example.catalogController;

import java.util.ArrayList;
import java.util.List;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.product.Product;

@RestController
@RequestMapping("/api/catalog")
public class CatalogController {

    // Sample in-memory catalog storage
    private List<Product> catalog = new ArrayList<>();

    // Endpoint to get all products from the catalog
    @GetMapping
    public List<Product> getAllProducts() {
//    	catalog.add(new Product(12,"headphone","ubl",500));
//    	catalog.add(new Product(13,"phone","redmi",15000.25));
//    	catalog.add(new Product(14,"laptop","dell",5000.25));
        return catalog;
    }

    // Endpoint to add a new product to the catalog
    @PostMapping
    public ResponseEntity<String> addProduct(@RequestBody Product newProduct) {
        catalog.add(newProduct);
        return ResponseEntity.status(HttpStatus.CREATED).body("Product added successfully");
    }

    // Endpoint to update an existing product in the catalog
    @PutMapping("/{id}")
    public ResponseEntity<String> updateProduct(@PathVariable int id, @RequestBody Product updatedProduct) {
        for (Product product : catalog) {
            if (product.getId()==id ){
                product.setName(updatedProduct.getName());
                product.setDescription(updatedProduct.getDescription());
                product.setPrice(updatedProduct.getPrice());
                return ResponseEntity.ok("Product updated successfully");
            }
        }
        return ResponseEntity.notFound().build();
    }

    // Endpoint to delete a product from the catalog
    @DeleteMapping("/{id}")
    public ResponseEntity<String> deleteProduct(@PathVariable Long id) {
        catalog.removeIf(product -> product.getId()==(id));
        return ResponseEntity.ok("Product deleted successfully");
    }
}
